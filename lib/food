#!/bin/bash

# This program is free software. It comes without any warranty, to the
# extent permitted by applicable law. You can redistribute it and/or modify
# it under the terms of the Do What The Fuck You Want To Public License,
# Version 2, as published by Sam Hocevar. See WTFPL.txt or
# http://www.wtfpl.net/ for more details.


function food() {
  prompt "Food:"
  read food

  if test -f "${foods}/${food}"; then
    points_per_serving="$(distill "$(< "${foods}/${food}")")" \
      || fail "Failed to get points per serving."
    output "Points per serving:" "${points_per_serving}"
    prompt "Overwrite?  [y,N]"
    read response
    if grep -qi 'y' <<< "${response}"; then
      > "${foods}/${food}"
      new_food "${food}"
    fi
  else
    if interactive; then
      new_food "${food}"
    else
      fail "Unknown food:  ${food}"
    fi
  fi
}


function new_food
{
  food="${1}"
  # Get details from the user.
  prompt "Calories per serving:"
  read calories
  prompt "Grams of fat per serving:"
  read fat
  prompt "Grams of dietary fiber per serving:"
  read fiber

  # Check validity of input.
  for var in calories fat fiber
  do
    eval $var=$(distill "${!var}")
    if [ "${!var}" == "" ]
    then
      fail "Invalid number for ${var}."
    fi
  done

  # The heavy lifting.
  points=$(calculate_points_per_serving "${food}" "${calories}" "${fat}" "${fiber}")

  output "Points per serving:" "${points}"

  # Save the points per serving for this food.
  printf "%s\n" "${points}" > "${foods}/${food}"
}


function calculate_points_per_serving
{
  # Parameters should be checked already.
  food="${1}"
  calories="${2}"
  fat="${3}"
  fiber="${4}"

  # min(fiber, 4)
  if [ "$(
    bc <<< "a=${fiber}; b=4; r=-1; if (a>b) r=1; r"
  )" == "1" ]
  then fiber=4
  fi
  debug "fiber:  ${fiber}"

  # The forumula, except for the min(fiber, 4) part, which is done above.
  points=$(
    bc <<< "scale=3; (${calories} / 50) + (${fat} / 12) - (${fiber} / 5)"
  )

  printf '%s\n' ${points}
}
